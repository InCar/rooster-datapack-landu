package com.incarcloud.rooster.util;

import org.junit.Assert;
import org.junit.Test;

import javax.xml.bind.DatatypeConverter;

/**
 * LandRespUtilTest
 *
 * @author Aaric, created on 2017-08-07T15:26.
 * @since 2.0
 */
public class LanduRespUtilTest {

    protected byte[] data1601 = {
            //----------0x1601
            (byte) 0xaa, 0x55, //2字节-数据包标志(AA55)
            0x00, 0x6a, //2字节-数据包长度
            (byte) 0xff, (byte) 0x95, //2字节-数据包长度校验(数据包长度取反)
            0x00, //1字节-数据包ID
            0x05, //1字节-保留字节(协议格式版本, v2.05-0x02, v3.08-0x05)
            0x16, 0x01, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x30, 0x30, 0x30, 0x30, 0x30, 0x39, 0x00, 0x00, 0x00, 0x00, 0x52, 0x31, 0x33, 0x00, 0x00, 0x32, 0x30, 0x31, 0x34, 0x2d, 0x30, 0x39, 0x2d, 0x30, 0x34, 0x20, 0x32, 0x33, 0x3a, 0x31, 0x35, 0x3a, 0x32, 0x33, 0x00, 0x01, 0x37, 0x2e, 0x38, 0x00, 0x30, 0x00, 0x30, 0x00, 0x57, 0x30, 0x30, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2c, 0x53, 0x30, 0x30, 0x2e, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x2c, 0x30, 0x2c, 0x31, 0x39, 0x37, 0x30, 0x2d, 0x30, 0x31, 0x2d, 0x30, 0x31, 0x20, 0x30, 0x30, 0x3a, 0x30, 0x30, 0x3a, 0x30, 0x34, 0x2c, 0x30, 0x00,
            0x13, 0x01, //2字节-校验和(【数据包长度】开始至全部【数据内容】结束止的所有字节产累加之和)
    };

    protected byte[] data1603 = {
            //----------0x1603
            (byte) 0xaa, 0x55, //2字节-数据包标志(AA55)
            0x00, 0x50, //2字节-数据包长度
            (byte) 0xff, (byte) 0xaf, //2字节-数据包长度校验(数据包长度取反)
            0x04, //1字节-数据包ID
            0x05, //1字节-保留字节(协议格式版本, v2.05-0x02, v3.08-0x05)
            0x16, 0x03, 0x49, 0x4e, 0x43, 0x41, 0x52, 0x31, 0x30, 0x30, 0x30, 0x31, 0x31, 0x36, 0x38, 0x36, 0x34, 0x33, 0x00, 0x00, 0x00, 0x0e, 0x6f, 0x31, 0x33, 0x32, 0x00, 0x4c, 0x46, 0x56, 0x32, 0x41, 0x32, 0x38, 0x56, 0x32, 0x45, 0x35, 0x30, 0x30, 0x39, 0x37, 0x31, 0x30, 0x00, 0x56, 0x31, 0x2e, 0x36, 0x31, 0x2e, 0x30, 0x30, 0x00, 0x56, 0x31, 0x2e, 0x30, 0x2e, 0x30, 0x00, 0x56, 0x33, 0x2e, 0x31, 0x36, 0x2e, 0x35, 0x37, 0x00, (byte) 0xff, 0x00,
            0x10, 0x6a, //2字节-校验和(【数据包长度】开始至全部【数据内容】结束止的所有字节产累加之和)
    };

    @Test
    public void testResponseBytes() {
        Assert.assertEquals("AA55000BFFF40005160100021A", DatatypeConverter.printHexBinary(LanduRespUtil.responseBytes(data1601, (byte) 0x00)));
    }

    @Test
    public void testResponse0x1603Bytes() {
        // AA55002FFFD004051603323031372D30382D30382032303A30303A303000000000000000000056302E30302E303000076C
        System.out.println(DatatypeConverter.printHexBinary(LanduRespUtil.response0x1603Bytes(data1603)));
    }
}
